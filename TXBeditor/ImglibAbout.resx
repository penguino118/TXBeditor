<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9wUyM48yDPwAAAAASUVORK5CYII=
</value>
  </data>
</root>